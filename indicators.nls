

;;
; track indics
to update-indicators
  
  if ticks = 10 [clear-all-plots]
  
  foreach tracked-indicators [? ->
    table:put ts-indicators-values (list ticks ?) (runresult ?)
  ]
end


;;
; possible more elaborated indicator : moving window average of derivative of living ? -> allows to spot a "still end-of-life" scenario

to-report timeint-living-derivative
  let t 0 let res 0
  if ticks < 100 [report 0]
  repeat 100 [
    set res res + ((table:get ts-indicators-values (list (ticks - t - 1) "living-proportion")) - (table:get ts-indicators-values (list (ticks - t - 2) "living-proportion")))
    set t t + 1
  ]
  report res
end


;;
; proportion of living cells
to-report living-proportion
  report count patches with [state = 1] / count patches
end


to-report living-subpop-proportion [col]
  report count patches with [state = 1 and cell-color = col] / count patches
end


;;
; propoprtion of newly born
to-report born-proportion
  report count patches with [state = 1 and changed? = true] / count patches
end

;;
; proportion of changed (born or dead)
to-report changed-proportion
  report count patches with [changed? = true] / count patches
end

; note : dead-proportion is cnaged - born
; implement it for convenience

to-report dead-proportion
  report count patches with [state = 1 and changed? = true] / count patches
end


;;
; position of the center of mass
to-report life-center-of-mass
  if sum [state] of patches = 0 [report [0 0]]
  report (list (sum [state * pxcor] of patches / sum [state] of patches) (sum [state * pycor] of patches / sum [state] of patches))
end

